;;; Compiled snippets and support files for `themes'
;;; Snippet definitions:
;;;
(yas-define-snippets 'themes
		     '(("nano-theme.el" ";;; nano-theme.el\n\n;;; Code:\n\n(unless (>= emacs-major-version 24)\n  (error \"The nano theme requires Emacs 24 or later!\"))\n\n(deftheme nano \"Nano\")\n\n;;(setq nano-color-foreground \"#ECEFF4\") ;; Snow Storm 3  / nord  6\n;;(setq nano-color-background \"#2E3440\") ;; Polar Night 0 / nord  0\n;;(setq nano-color-highlight  \"#3B4252\") ;; Polar Night 1 / nord  1\n;;(setq nano-color-critical   \"#EBCB8B\") ;; Aurora        / nord 11\n;;(setq nano-color-salient    \"#81A1C1\") ;; Frost         / nord  9\n;;(setq nano-color-strong     \"#ECEFF4\") ;; Snow Storm 3  / nord  6\n;;(setq nano-color-popout     \"#D08770\") ;; Aurora        / nord 12\n;;(setq nano-color-subtle     \"#434C5E\") ;; Polar Night 2 / nord  2\n;;(setq nano-color-faded      \"#616E87\") ;;\n\n;;(setq nano-color-foreground \"#ECEFF4\")\n;;(setq nano-color-background \"#300A24\")\n;;(setq nano-color-highlight  \"#3D1836\")\n;;(setq nano-color-critical   \"#EBCB8B\")\n;;(setq nano-color-salient    \"#BA7BA6\") ;;  ;;#c181a3 ;;#BA7BA6\n;;(setq nano-color-strong     \"#ECEFF4\")\n;;(setq nano-color-popout     \"#D08770\")\n;;(setq nano-color-subtle     \"#5E4356\")\n;;(setq nano-color-faded      \"#785065\")\n\n;;(setq nano-color-foreground \"#ECEFF4\")\n;;(setq nano-color-background \"#262334\")\n;;(setq nano-color-highlight  \"#423D53\")\n;;(setq nano-color-critical   \"#D84D61\")\n;;(setq nano-color-salient    \"#A893D1\")\n;;(setq nano-color-strong     \"#C9AFFF\")\n;;(setq nano-color-popout     \"#FBD25A\") ;;#FF977B\n;;(setq nano-color-subtle     \"#5A5470\") ;;#44404F\n;;(setq nano-color-faded      \"#8688C1\")\n\n(setq nano-color-foreground \"#37474F\")\n(setq nano-color-background \"#FFFFFF\")\n(setq nano-color-highlight  \"#CCD5F0\")\n(setq nano-color-critical   \"#D84D61\")\n(setq nano-color-salient    \"#40568D\")\n(setq nano-color-strong     \"#C9AFFF\")\n(setq nano-color-popout     \"#A31515\")\n(setq nano-color-subtle     \"#BFCDDB\")\n(setq nano-color-faded      \"#5D6B99\")\n(setq nano-color-highlight-line \"#F5CC84\")\n(setq nano-color-function \"#74531F\");; #8A1BFF\n\n;;(setq my-font-name         \"Roboto Mono\") ;; if you enable this add :weight bold option to line 124\n(setq my-font-name         \"PxPlus ToshibaSat 8x16:pixelsize=16:dpi=96:autohint=false:hinting=false:antialias=standard\")\n\n(let  ((background 	nano-color-background)\n       (gutters    	nano-color-background)\n       (gutter-fg  	nano-color-background)\n       (gutters-active 	nano-color-background)\n       (builtin      	nano-color-salient)\n       (selection  	nano-color-subtle)\n       (text       	nano-color-foreground)\n       (comments   	nano-color-faded)\n       (punctuation 	nano-color-salient)\n       (keywords 	nano-color-salient)\n       (variables 	nano-color-foreground)\n       (functions 	nano-color-function);; nano-color-foreground\n       (methods    	nano-color-foreground) ;; #c1d1e3\n       (strings    	nano-color-popout)\n       (constants 	nano-color-salient)\n       (macros 		nano-color-salient)\n       (numbers 	nano-color-salient)\n       (white     	nano-color-foreground)\n       (error 		nano-color-critical)\n       (warning 	nano-color-critical)\n       (highlight-line 	nano-color-highlight-line) ;;nano-color-highlight\n       (line-fg 	nano-color-subtle))\n\n  (custom-theme-set-faces\n   'nano\n\n   ;; Default colors\n   ;; *****************************************************************************\n\n   `(default                          ((t (:foreground ,nano-color-foreground :background ,nano-color-background :weight normal))))\n   `(region                           ((t (:foreground nil :background ,selection))))\n   `(cursor                           ((t (:background ,nano-color-foreground))))\n   `(linum                            ((t (:background ,nano-color-background :foreground ,nano-color-background))))\n   `(highlight                        ((t (:foreground nil :background ,nano-color-subtle))))\n   `(link                             ((t (:foreground ,nano-color-salient :weight light))))\n   `(lazy-highlight                   ((t (:background ,nano-color-subtle :weight light))))\n   `(isearch                          ((t (:foreground ,nano-color-foreground :family ,my-font-name :weight medium))))\n   `(isearch-fail                     ((t (:foreground ,nano-color-faded))))\n   `(minibuffer-prompt                ((t (:foreground ,nano-color-foreground :family ,my-font-name :weight medium))))\n   `(ido-subdir                       ((t (:foreground ,nano-color-foreground)))) ;; Face used by ido for highlighting subdirs in the alternatives.\n   `(ido-first-match                  ((t (:foreground ,nano-color-salient :weight bold)))) ;; Face used by ido for highlighting first match.\n   `(ido-only-match                   ((t (:foreground ,nano-color-faded :weight bold))))\n   `(compilation-mode-line-exit       ((t (:foreground ,nano-color-salient :weight bold))))\n   `(compilation-mode-line-fail       ((t (:foreground ,nano-color-critical :weight bold))))\n   `(success                          ((t (:foreground ,nano-color-salient :weight bold))))\n   `(warning                          ((t (:foreground ,nano-color-popout :weight bold))))\n   `(error                            ((t (:foreground ,nano-color-critical :weight bold))))\n   `(match                            ((t (:foreground ,nano-color-popout :weight bold))))\n   `(window-divider                   ((t (:foreground ,nano-color-background))))\n   `(window-divider-first-pixel       ((t (:foreground ,nano-color-highlight))))\n   `(window-divider-last-pixel        ((t (:foreground ,nano-color-highlight))))\n   `(fringe                           ((t (:foreground ,nano-color-faded :weight light)))) ;faded\n   `(help-key-binding                 ((t (:foreground ,nano-color-faded :background ,nano-color-highlight :weight normal))))\n   `(completions-common-part          ((t (:foreground ,nano-color-faded :weight normal))))\n   `(custom-group-tag                 ((t (:foreground ,nano-color-salient :weight normal))))\n   `(custom-variable-tag              ((t (:foreground ,nano-color-salient :weight normal))))\n   \n\n   ;; Font lock faces\n   ;; *****************************************************************************\n\n   (font-lock-add-keywords 'c++-mode\n			   '((\"\\\\(\\\\w+\\\\)\\\\s-*\\(\"\n			      (1 font-lock-function-name-face)))\n			   t)\n   \n   `(font-lock-keyword-face           ((t (:foreground ,keywords))))\n   `(font-lock-type-face              ((t (:foreground ,punctuation))))\n   `(font-lock-constant-face          ((t (:foreground ,constants))))\n   `(font-lock-variable-name-face     ((t (:foreground ,variables))))\n   `(font-lock-builtin-face           ((t (:foreground ,builtin))))\n   `(font-lock-string-face            ((t (:foreground ,strings))))\n   `(font-lock-comment-face           ((t (:foreground ,comments))))\n   `(font-lock-comment-delimiter-face ((t (:foreground ,comments))))\n   `(font-lock-doc-face               ((t (:foreground ,comments))))\n   `(font-lock-function-name-face     ((t (:foreground ,functions))))\n   `(font-lock-doc-string-face        ((t (:foreground ,strings))))\n   `(font-lock-preprocessor-face      ((t (:foreground ,macros))))\n   `(font-lock-warning-face           ((t (:foreground ,warning))))\n\n     ;; --- ANSI colors ----------------------------------------------------\n\n    ;;'(ansi-color-black                       ((t (:inherit nano-default))))\n    ;;'(ansi-color-bold                         ((t (:inherit nano-strong))))\n    ;;'(ansi-color-bright-black                 ((t (:inherit nano-strong))))\n    ;;'(ansi-color-faint                         ((t (:inherit nano-faded))))\n    ;;'(ansi-color-fast-blink                    ((t (:inherit nano-faded))))\n    ;;'(ansi-color-slow-blink                    ((t (:inherit nano-faded))))\n    ;;'(ansi-color-inverse                   ((t (:inherit nano-default-i))))\n    ;;'(ansi-color-italic                            ((t (:inherit italic))))\n    ;;'(ansi-color-underline                     ((t (:inherit nano-faded))))\n    ;;'(ansi-color-blue           ((t (:foreground \"#42A5F5\")))) ;; material color blue L400\n    ;;'(ansi-color-bright-blue    ((t (:background \"#BBDEFB\")))) ;; material color blue L100\n    ;;'(ansi-color-cyan           ((t (:foreground \"#26C6DA\")))) ;; material color cyan L400\n    ;;'(ansi-color-bright-cyan    ((t (:background \"#B2EBF2\")))) ;; material color cyan L100\n    ;;'(ansi-color-green          ((t (:foreground \"#66BB6A\")))) ;; material color green L400\n    ;;'(ansi-color-bright-green   ((t (:background \"#C8E6C9\")))) ;; material color green L100\n    ;;'(ansi-color-magenta        ((t (:foreground \"#AB47BC\")))) ;; material color purple L400\n    ;;'(ansi-color-bright-magenta ((t (:background \"#E1BEE7\")))) ;; material color purple L100\n    ;;'(ansi-color-red            ((t (:foreground \"#EF5350\")))) ;; material color red L400\n    ;;'(ansi-color-bright-red     ((t (:background \"#FFCDD2\")))) ;; material color red L100\n    ;;'(ansi-color-white          ((t (:inherit nano-color-subtle))))\n    ;;'(ansi-color-bright-white   ((t (:inherit default))))\n    ;;'(ansi-color-yellow         ((t (:foreground \"#FFEE58\")))) ;; material color yellow L400\n    ;;'(ansi-color-bright-yellow  ((t (:background \"#FFF9C4\")))) ;; material color yellow L100\n\n   ;; Plugins\n   ;; *****************************************************************************\n   `(trailing-whitespace ((t (:foreground nil :background ,nano-color-critical))))\n   `(whitespace-trailing ((t (:background nil :foreground ,nano-color-critical :inverse-video t))))\n\n   `(linum                           ((t (:foreground ,nano-color-subtle :background ,background))))\n   `(linum-relative-current-face     ((t (:foreground ,nano-color-foreground :background ,nano-color-background))))\n   `(line-number                     ((t (:foreground ,nano-color-subtle :background ,nano-color-background))))\n   `(line-number-current-line        ((t (:foreground ,nano-color-foreground :background ,nano-color-background))))\n\n   ;; hl-line-mode\n   `(hl-line      ((t (:background ,nano-color-highlight-line)))) ;;,nano-color-highlight\n   `(hl-line-face ((t (:background ,nano-color-highlight-line)))) ;;,nano-color-highlight\n\n   ;; rainbow-delimiters\n   `(rainbow-delimiters-depth-1-face ((t (:foreground ,nano-color-foreground))))\n   `(rainbow-delimiters-unmatched-face ((t (:foreground ,nano-color-critical))))\n   `(show-paren-match ((t (:foreground ,nano-color-popout))))\n   `(show-paren-mismatch ((t (:foreground ,nano-color-critical))))\n   \n    ;; mode-line and powerline\n   `(mode-line-buffer-id ((t (:foreground ,nano-color-background :distant-foreground ,nano-color-foreground :text ,nano-color-foreground :family ,my-font-name)))) ;; add bold roboto-mono :weight bold\n   `(mode-line ((t (:foreground ,nano-color-faded\n                    :background ,nano-color-highlight\n 		    :overline nil\n		    :underline nil\n                    :box nil))))\n   ;; buttons on mode-line\n   `(mode-line-highlight ((t (:foreground ,nano-color-faded\n                              :background ,nano-color-background\n 		              :overline nil\n		              :underline nil\n                              :box `(:line-width 1\n                                       :color ,nano-color-background\n                                       :style nil)\n))))\n\n   ;;`(powerline-active1 ((t (:background ,nano-color-subtle :foreground ,nano-color-foreground))))\n   ;;`(powerline-active2 ((t (:background ,nano-color-subtle :foreground ,nano-color-foreground))))\n\n   `(mode-line-inactive ((t (:foreground ,nano-color-faded\n                             :background ,nano-color-background\n 		             :overline nil\n		             :underline nil\n                             :box nil))))\n\n   `(header-line ((t (:weight light\n                    :foreground ,nano-color-foreground\n                    :background ,nano-color-background\n                    :overline nil\n                    :underline nil\n                    :box nil\n                    :box `(:line-width 1\n                                       :color ,nano-color-background\n                                       :style nil)\n                    :inherit nil))))\n\n   `(internal-border ((t (:background ,nano-color-background))))\n\n   ;;`(powerline-inactive1 ((t (:background ,background :foreground ,nano-color-foreground))))\n   ;;`(powerline-inactive2 ((t (:background ,background :foreground ,nano-color-foreground))))\n\n\n   `(custom-button ((t (:foreground ,nano-color-faded\n                        :background ,nano-color-background\n                         :box `(:line-width 1\n                                            :color ,nano-color-faded\n                                            :style nil)))))\n                         \n   `(custom-button-mouse ((t (;;:inherit 'custom-button\n                                :foreground ,nano-color-faded\n                                :background ,nano-color-subtle\n                                :box `(:line-width 1\n                                            :color ,nano-color-faded\n                                            :style nil)))))\n                                 \n   `(custom-button-pressed ((t (:foreground ,nano-color-background\n                                :background ,nano-color-salient\n                                ;;:inherit `(:foreground ,nano-color-salient :weight light)\n                                :box `(:line-width 1\n                                       :color ,nano-color-salient\n                                       :style nil)\n                                :inverse-video nil))))\n\n    ;; for example state field in customize face settings\n    `(custom-state ((t (:foreground ,nano-color-salient :weight light))))\n    `(custom-modified ((t (:foreground ,nano-color-salient :weight light))))\n    `(custom-changed ((t (:foreground ,nano-color-salient :weight light))))\n\n    ;; for example search field in customize-face settings\n    `(widget-field ((t (:background ,nano-color-subtle))))\n\n   ;; highlight numbers\n   `(highlight-numbers-number ((t (:foreground ,nano-color-salient))))\n   )\n\n  (custom-theme-set-variables\n   'nano\n   '(linum-format \" %5i \")\n   )\n  )\n\n;;;###autoload\n(when (and (boundp 'custom-theme-load-path) load-file-name)\n  (add-to-list 'custom-theme-load-path\n               (file-name-as-directory (file-name-directory load-file-name))))\n\n;; *****************************************************************************\n\n(provide-theme 'nano)\n\n;; Local Variables:\n;; no-byte-compile: t\n;; End:\n\n(provide 'nano-theme)\n\n;;; nano-theme.el ends here\n" "nano-theme.el" nil nil nil "C:/Users/SSJSR/AppData/Roaming/.emacs.d/themes/nano-theme.el" nil nil)
		       ("nano-theme-pkg.el" "(define-package \"nano-theme\" \"0.0\" \"Nano\" '((emacs \"24\")))\n" "nano-theme-pkg.el" nil nil nil "C:/Users/SSJSR/AppData/Roaming/.emacs.d/themes/nano-theme-pkg.el" nil nil)
		       ("nano-theme-autoloads.el" ";;; nano-theme-autoloads.el --- automatically extracted autoloads\n;;\n;;; Code:\n\n(add-to-list 'load-path (directory-file-name\n                         (or (file-name-directory #$) (car load-path))))\n\n\f\n;;;### (autoloads nil \"nano-theme\" \"nano-theme.el\" (0 0 0\n;;;;;;  0))\n;;; Generated autoloads from nano-theme.el\n\n(when (and (boundp 'custom-theme-load-path) load-file-name) (add-to-list 'custom-theme-load-path (file-name-as-directory (file-name-directory load-file-name))))\n\n(if (fboundp 'register-definition-prefixes) (register-definition-prefixes \"nano-theme\" '(\"nano\")))\n\n;;;***\n\f\n;; Local Variables:\n;; version-control: never\n;; no-byte-compile: t\n;; no-update-autoloads: t\n;; coding: utf-8\n;; End:\n;;; nano-theme-autoloads.el ends here\n" "nano-theme-autoloads.el" nil nil nil "C:/Users/SSJSR/AppData/Roaming/.emacs.d/themes/nano-theme-autoloads.el" nil nil)))


;;; Do not edit! File generated at Mon Oct 24 20:03:13 2022
